// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReverseMarketPlace.Demands.Infrastructure.Data.EF.Data;

namespace ReverseMarketPlace.Demands.Infrastructure.Data.EF.Migrations
{
    [DbContext(typeof(DemandsDbContext))]
    [Migration("20200113172415_SeedData1")]
    partial class SeedData1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UpperCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89e86259-91c1-4638-b86e-1f8289664fa9"),
                            Name = "Tv & Audio"
                        });
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Demand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Demands");
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.DemandAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DemandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("DemandId");

                    b.ToTable("DemandAttributeValues");
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.ProductTypeAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductTypeAttributes");
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Category", b =>
                {
                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Category", "UpperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("UpperCategoryId");
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Demand", b =>
                {
                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.ProductType", "ProductType")
                        .WithMany("Demands")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.DemandAttributeValue", b =>
                {
                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Attribute", "Attribute")
                        .WithMany("DemandAttributeValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Demand", "Demand")
                        .WithMany("DemandAttributeValues")
                        .HasForeignKey("DemandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.ProductType", b =>
                {
                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Category", "Category")
                        .WithMany("ProductTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.ProductTypeAttribute", b =>
                {
                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.Attribute", "Attribute")
                        .WithMany("ProductTypeAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReverseMarketPlace.Demands.Infrastructure.Data.EF.Persistance_Models.ProductType", "ProductType")
                        .WithMany("ProductTypeAttributes")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
